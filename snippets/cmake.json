{
	"Lib Project": {
		"prefix": "cmake_lib",
		"description": "Setup Library",
		"body": [
			"cmake_minimum_required(VERSION 3.20)",
			"",
			"set(CXX_STANDARD 17)",
			"set(CXX_STANDARD_REQUIRED ON)",
			"set(CXX_EXTENSIONS ON)",
			"",
			"set(CMAKE_C_COMPILER /usr/bin/clang CACHE PATH \"\" FORCE)",
			"set(CMAKE_CXX_COMPILER /usr/bin/clang++ CACHE PATH \"\" FORCE)",
			"set(CMAKE_CXX_FLAGS \"\\${CMAKE_CXX_FLAGS} -std=c++17 -fuse-ld=lld -Wno-unused-command-line-argument\") # -v",
			"",
			"set(CMAKE_C_FLAGS_INIT                \"-Wall\")",
			"set(CMAKE_C_FLAGS_DEBUG_INIT          \"-g\")",
			"set(CMAKE_C_FLAGS_MINSIZEREL_INIT     \"-Os -DNDEBUG\")",
			"set(CMAKE_C_FLAGS_RELEASE_INIT        \"-O3 -DNDEBUG\")",
			"set(CMAKE_C_FLAGS_RELWITHDEBINFO_INIT \"-O2 -g\")",
			"set(CMAKE_CXX_FLAGS_INIT                \"-Wall\")",
			"set(CMAKE_CXX_FLAGS_DEBUG_INIT          \"-g\")",
			"set(CMAKE_CXX_FLAGS_MINSIZEREL_INIT     \"-Os -DNDEBUG\")",
			"set(CMAKE_CXX_FLAGS_RELEASE_INIT        \"-O3 -DNDEBUG\")",
			"set(CMAKE_CXX_FLAGS_RELWITHDEBINFO_INIT \"-O2 -g\")",
			"",
			"set(CMAKE_BUILD_TYPE Debug)",
			"set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY \\${CMAKE_BINARY_DIR}/lib)",
			"set(CMAKE_LIBRARY_OUTPUT_DIRECTORY \\${CMAKE_BINARY_DIR}/lib)",
			"set(CMAKE_RUNTIME_OUTPUT_DIRECTORY \\${CMAKE_BINARY_DIR}/bin)",
			"",
			"project(${1:${TM_DIRECTORY}} VERSION 1.0 DESCRIPTION \"$1 Description\" LANGUAGES CXX)",
			"",
			"file(GLOB_RECURSE SRC_FILES src/*)",
			"set(INCLUDE_DIRS include)",
			"set(LINK_DIRS lib)",
			"set(PROJECT_LIBRARIES )",
			"",
			"message(\"INCLUDE_DIRS           : \" \\${INCLUDE_DIRS})",
			"message(\"LINK_DIRS              : \" \\${LINK_DIRS})",
			"message(\"PROJECT_LIBRARIES      : \" \\${PROJECT_LIBRARIES})",
			"message(\"SRC_FILES              : \" \\${SRC_FILES})",
			"",
			"add_library(\\${PROJECT_NAME} \\${SRC_FILES})",
			"target_include_directories(\\${PROJECT_NAME} PUBLIC \\${INCLUDE_DIRS})",
			"target_link_directories(\\${PROJECT_NAME} PUBLIC \\${LINK_DIRS})",
			"target_link_libraries(\\${PROJECT_NAME} PUBLIC \\${PROJECT_LIBRARIES})"
		]
	},

	"Lib Thread Project": {
		"prefix": "cmake_exe_thread",
		"description": "Setup Executable With Threading",
		"body": [
			"cmake_minimum_required(VERSION 3.20)",
			"",
			"set(CXX_STANDARD 17)",
			"set(CXX_STANDARD_REQUIRED ON)",
			"set(CXX_EXTENSIONS ON)",
			"",
			"set(CMAKE_C_COMPILER /usr/bin/clang CACHE PATH \"\" FORCE)",
			"set(CMAKE_CXX_COMPILER /usr/bin/clang++ CACHE PATH \"\" FORCE)",
			"set(CMAKE_CXX_FLAGS \"\\${CMAKE_CXX_FLAGS} -std=c++17 -fuse-ld=lld -Wno-unused-command-line-argument\") # -v",
			"",
			"set(CMAKE_C_FLAGS_INIT                \"-Wall\")",
			"set(CMAKE_C_FLAGS_DEBUG_INIT          \"-g\")",
			"set(CMAKE_C_FLAGS_MINSIZEREL_INIT     \"-Os -DNDEBUG\")",
			"set(CMAKE_C_FLAGS_RELEASE_INIT        \"-O3 -DNDEBUG\")",
			"set(CMAKE_C_FLAGS_RELWITHDEBINFO_INIT \"-O2 -g\")",
			"set(CMAKE_CXX_FLAGS_INIT                \"-Wall\")",
			"set(CMAKE_CXX_FLAGS_DEBUG_INIT          \"-g\")",
			"set(CMAKE_CXX_FLAGS_MINSIZEREL_INIT     \"-Os -DNDEBUG\")",
			"set(CMAKE_CXX_FLAGS_RELEASE_INIT        \"-O3 -DNDEBUG\")",
			"set(CMAKE_CXX_FLAGS_RELWITHDEBINFO_INIT \"-O2 -g\")",
				"",
			"set(CMAKE_BUILD_TYPE Debug)",
			"set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY \\${CMAKE_BINARY_DIR}/lib)",
			"set(CMAKE_LIBRARY_OUTPUT_DIRECTORY \\${CMAKE_BINARY_DIR}/lib)",
			"set(CMAKE_RUNTIME_OUTPUT_DIRECTORY \\${CMAKE_BINARY_DIR}/bin)",
			"",
			"project(${1:${TM_DIRECTORY}} VERSION 1.0 DESCRIPTION \"$1 Description\" LANGUAGES CXX)",
			"",
			"find_package(Threads REQUIRED)",
			"",
			"file(GLOB_RECURSE SRC_FILES \\${CMAKE_CURRENT_SOURCE_DIR}/src/*)",
			"set(INCLUDE_DIRS \\${CMAKE_CURRENT_SOURCE_DIR}/include)",
			"set(LINK_DIRS \\${CMAKE_CURRENT_SOURCE_DIR}/lib)",
			"set(PROJECT_LIBRARIES \\${CMAKE_THREAD_LIBS_INIT})",
			"",
			"message(\"CMAKE_THREAD_LIBS_INIT : \" \\${CMAKE_THREAD_LIBS_INIT})",
			"message(\"INCLUDE_DIRS           : \" \\${INCLUDE_DIRS})",
			"message(\"LINK_DIRS              : \" \\${LINK_DIRS})",
			"message(\"PROJECT_LIBRARIES      : \" \\${PROJECT_LIBRARIES})",
			"message(\"SRC_FILES              : \" \\${SRC_FILES})",
			"",
			"add_executable(\\${PROJECT_NAME} \\${SRC_FILES})",
			"target_include_directories(\\${PROJECT_NAME} PUBLIC \\${INCLUDE_DIRS})",
			"target_link_directories(\\${PROJECT_NAME} PUBLIC \\${LINK_DIRS})",
			"target_link_libraries(\\${PROJECT_NAME} PUBLIC \\${PROJECT_LIBRARIES})",
			"target_compile_options(\\${PROJECT_NAME} PUBLIC -pthread)"
		]
	},

	"Exe Project": {
		"prefix": "cmake_exe",
		"description": "Setup Executable",
		"body": [
			"cmake_minimum_required(VERSION 3.20)",
			"",
			"set(CXX_STANDARD 17)",
			"set(CXX_STANDARD_REQUIRED ON)",
			"set(CXX_EXTENSIONS ON)",
			"",
			"set(CMAKE_C_COMPILER /usr/bin/clang CACHE PATH \"\" FORCE)",
			"set(CMAKE_CXX_COMPILER /usr/bin/clang++ CACHE PATH \"\" FORCE)",
			"set(CMAKE_CXX_FLAGS \"\\${CMAKE_CXX_FLAGS} -std=c++17 -fuse-ld=lld -Wno-unused-command-line-argument\") # -v",
			"",
			"set(CMAKE_C_FLAGS_INIT                \"-Wall\")",
			"set(CMAKE_C_FLAGS_DEBUG_INIT          \"-g\")",
			"set(CMAKE_C_FLAGS_MINSIZEREL_INIT     \"-Os -DNDEBUG\")",
			"set(CMAKE_C_FLAGS_RELEASE_INIT        \"-O3 -DNDEBUG\")",
			"set(CMAKE_C_FLAGS_RELWITHDEBINFO_INIT \"-O2 -g\")",
			"set(CMAKE_CXX_FLAGS_INIT                \"-Wall\")",
			"set(CMAKE_CXX_FLAGS_DEBUG_INIT          \"-g\")",
			"set(CMAKE_CXX_FLAGS_MINSIZEREL_INIT     \"-Os -DNDEBUG\")",
			"set(CMAKE_CXX_FLAGS_RELEASE_INIT        \"-O3 -DNDEBUG\")",
			"set(CMAKE_CXX_FLAGS_RELWITHDEBINFO_INIT \"-O2 -g\")",
			"",
			"set(CMAKE_BUILD_TYPE Debug)",
			"set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY \\${CMAKE_BINARY_DIR}/lib)",
			"set(CMAKE_LIBRARY_OUTPUT_DIRECTORY \\${CMAKE_BINARY_DIR}/lib)",
			"set(CMAKE_RUNTIME_OUTPUT_DIRECTORY \\${CMAKE_BINARY_DIR}/bin)",
			"project(${1:${TM_DIRECTORY}} VERSION 1.0 DESCRIPTION \"$1 Description\" LANGUAGES CXX)",
			"",
			"find_package(Threads REQUIRED)",
			"",
			"file(GLOB_RECURSE SRC_FILES \\${CMAKE_CURRENT_SOURCE_DIR}/src/*)",
			"set(INCLUDE_DIRS \\${CMAKE_CURRENT_SOURCE_DIR}/include)",
			"set(LINK_DIRS \\${CMAKE_CURRENT_SOURCE_DIR}/lib)",
			"set(PROJECT_LIBRARIES \\${CMAKE_THREAD_LIBS_INIT})",
			"",
			"message(\"CMAKE_THREAD_LIBS_INIT : \" \\${CMAKE_THREAD_LIBS_INIT})",
			"message(\"INCLUDE_DIRS           : \" \\${INCLUDE_DIRS})",
			"message(\"LINK_DIRS              : \" \\${LINK_DIRS})",
			"message(\"PROJECT_LIBRARIES      : \" \\${PROJECT_LIBRARIES})",
			"message(\"SRC_FILES              : \" \\${SRC_FILES})",
			"",
			"add_library(\\${PROJECT_NAME} \\${SRC_FILES})",
			"target_include_directories(\\${PROJECT_NAME} PUBLIC \\${INCLUDE_DIRS})",
			"target_link_directories(\\${PROJECT_NAME} PUBLIC \\${LINK_DIRS})",
			"target_link_libraries(\\${PROJECT_NAME} PUBLIC \\${PROJECT_LIBRARIES})",
			"target_compile_options(\\${PROJECT_NAME} PUBLIC -pthread)"
		]
	},

	"Exe Thread Project": {
		"prefix": "cmake_exe_thread",
		"description": "Setup Executable With Threading",
		"body": [
			"cmake_minimum_required(VERSION 3.20)",
			"",
			"project(${1:${TM_DIRECTORY}} VERSION 1.0 DESCRIPTION \"$1 Description\" LANGUAGES CXX)",
			"",
			"set(CXX_STANDARD 17)",
			"set(CXX_STANDARD_REQUIRED ON)",
			"",
			"set(CMAKE_CXX_FLAGS \"\\${CMAKE_CXX_FLAGS} -std=c++17 -fuse-ld=lld -Wno-unused-command-line-argument -v\")",
			"",
			"set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY \\${CMAKE_BINARY_DIR}/lib)",
			"set(CMAKE_LIBRARY_OUTPUT_DIRECTORY \\${CMAKE_BINARY_DIR}/lib)",
			"set(CMAKE_RUNTIME_OUTPUT_DIRECTORY \\${CMAKE_BINARY_DIR}/bin)",
			"",
			"set(CMAKE_C_FLAGS_INIT                \"-Wall\")",
			"set(CMAKE_C_FLAGS_DEBUG_INIT          \"-g\")",
			"set(CMAKE_C_FLAGS_MINSIZEREL_INIT     \"-Os -DNDEBUG\")",
			"set(CMAKE_C_FLAGS_RELEASE_INIT        \"-O3 -DNDEBUG\")",
			"set(CMAKE_C_FLAGS_RELWITHDEBINFO_INIT \"-O2 -g\")",
			"set(CMAKE_CXX_FLAGS_INIT                \"-Wall\")",
			"set(CMAKE_CXX_FLAGS_DEBUG_INIT          \"-g\")",
			"set(CMAKE_CXX_FLAGS_MINSIZEREL_INIT     \"-Os -DNDEBUG\")",
			"set(CMAKE_CXX_FLAGS_RELEASE_INIT        \"-O3 -DNDEBUG\")",
			"set(CMAKE_CXX_FLAGS_RELWITHDEBINFO_INIT \"-O2 -g\")",
				"",
			"find_package(Threads REQUIRED)",
			"",
			"file(GLOB_RECURSE SRC_FILES src/*)",
			"set(INCLUDE_DIRS include)",
			"set(LINK_DIRS lib)",
			"set(PROJECT_LIBRARIES pistache \\${CMAKE_THREAD_LIBS_INIT})",
			"",
			"message(\"CMAKE_THREAD_LIBS_INIT : \" \\${CMAKE_THREAD_LIBS_INIT})",
			"message(\"INCLUDE_DIRS           : \" \\${INCLUDE_DIRS})",
			"message(\"LINK_DIRS              : \" \\${LINK_DIRS})",
			"message(\"PROJECT_LIBRARIES      : \" \\${PROJECT_LIBRARIES})",
			"message(\"SRC_FILES              : \" \\${SRC_FILES})",
			"",
			"add_executable(\\${PROJECT_NAME} \\${SRC_FILES})",
			"target_include_directories(\\${PROJECT_NAME} PUBLIC \\${INCLUDE_DIRS})",
			"target_link_directories(\\${PROJECT_NAME} PUBLIC \\${LINK_DIRS})",
			"target_link_libraries(\\${PROJECT_NAME} PUBLIC \\${PROJECT_LIBRARIES})",
			"target_compile_options(\\${PROJECT_NAME} PUBLIC -pthread)"
		]
	},

	"List Variables": {
		"prefix": "list",
		"body": [
			"get_cmake_property(_variableNames VARIABLES)",
			"list(SORT _variableNames)",
			"foreach(_variableName \\${_variableNames})",
			"message(STATUS \"\\${_variableName}=\\${\\${_variableName}}\")",
			"endforeach()"
		]
	},

	"Start SFML Project": {
		"prefix": "sfml",
		"description": "Default SFML Setup",
		"body": [
			"find_package(SFML 2.5 COMPONENTS  graphics window system  REQUIRED)",
			"MESSAGE(\"SFML_DIR: \" \\${SFML_INCLUDE_DIR})",
			"MESSAGE(\"SFML_INCLUDE_DIR: \" \\${SFML_INCLUDE_DIR})"
		]
	},

	"Start SFML IMGUI Project": {
		"prefix": "sfml_imgui",
		"description": "Default SFML IMGUI Setup",
		"body": []
	},

	"Start GLFW Project": {
		"prefix": "glfw",
		"description": "Default GLFW Setup",
		"body": []
	},

	"Start OpenGL Project": {
		"prefix": "opengl",
		"description": "Default OpenGL Setup",
		"body": []
	},

	"Start OpenCV Project": {
		"prefix": "opencv",
		"description": "Default OpenCV Setup",
		"body": []
	},

	"Message": {
		"prefix": "mes",
		"body": ["message(\"$1 : \" \\${$1})", "$2"],
		"description": "Output to console"
	},

	"Ext_url": {
		"prefix": "url",
		"body": [
			"include(ExternalProject)",
			"ExternalProject_Add(\\${1:googletest}",
			"\tURL \\${2:http://googletest.googlecode.com/files/gtest-1.7.0.zip}",
			"\tURL_HASH SHA1=\\${3:f85f6d2481e2c6c4a18539e391aa4ea8ab0394af}",
			"\tSOURCE_DIR \"\\${4:\\${CMAKE_BINARY_DIR}/gtest-src}\"",
			"\tBINARY_DIR \"\\${0:\\${CMAKE_BINARY_DIR}/gtest-build}\"",
			"\tCONFIGURE_COMMAND \"\"",
			"\tBUILD_COMMAND \"\"",
			"\tINSTALL_COMMAND   \"\"",
			"\tTEST_COMMAND  \"\"",
			"\t)"
		]
	},

	"Ext_git": {
		"prefix": "git",
		"body": [
			"include(ExternalProject)",
			"ExternalProject_Add(\\${1:googletest}",
			"\tGIT_REPOSITORY \\${2:https://github.com/google/googletest.git}",
			"\tGIT_TAG           \\${3:master}",
			"\tSOURCE_DIR        \"\\${4:\\${CMAKE_BINARY_DIR}/${1}-src}\"",
			"\tBINARY_DIR        \"\\${0:\\${CMAKE_BINARY_DIR}/${1}-build}\"",
			"\tCONFIGURE_COMMAND \"\"",
			"\tBUILD_COMMAND     \"\"",
			"\tINSTALL_COMMAND     \"\"",
			"\tTEST_COMMAND      \"\"",
			"\t)"
		]
	},

	"CPR": {
		"prefix": "cpr",
		"body": [
			"### CPR ###",
			"set(CPR_BUILD_TESTS OFF)",
			"set(CPR_BUILD_TESTS_SSL OFF)",
			"set(CPR_USE_SYSTEM_CURL ON)",
			"set(BUILD_CPR_TESTS OFF)",
			"set(CPR_USE_SYSTEM_GTEST ON)",
			"",
			"fetchcontent_declare(",
			"  cpr",
			"  GIT_REPOSITORY https://github.com/whoshuu/cpr.git",
			"  GIT_TAG fdc7c79da8ac5c4591199cb4f0ee3d06501827a5",
			"  GIT_PROGRESS TRUE",
			")",
			"fetchcontent_makeavailable(cpr)",
			"",
			"set(CPR_INCLUDE_DIRS ${cpr_SOURCE_DIR}/include)",
			"set(CPR_LIBRARIES cpr::cpr)",
			"message(\"CPR_INCLUDE_DIRS : \" \\${CPR_INCLUDE_DIRS})",
			"message(\"CPR_LIBRARIES    : \" \\${CPR_LIBRARIES})",
			"#### END CPR ###"
		]
	}
}
